name: "CaffeNet"
#input: "data"
#input_dim: 1
#input_dim: 3
#input_dim: 224
#input_dim: 224
#allLabsCrop Train: 128813
# test: 24260
#Clean: 123407
#test: 23300
layer {
  name: "data"
  type: "HDF5Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  hdf5_data_param {
    source: "/home/npellejero/tesis/AMFED/redes/txtFiles/cohnKanade/train/list.txt"
    batch_size: 256
  }
}
layer {
  name: "data"
  type: "HDF5Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
	hdf5_data_param {
    source: "/home/npellejero/tesis/AMFED/redes/txtFiles/cohnKanade/test/list.txt"
    batch_size: 64
  }
}
#layer {
#  name: "slicer_label"
#  type: "Slice"
#  bottom: "label"
#  top: "smile"
#  top: "rest"
#  slice_param {
#    axis: 1
#    slice_point: 1
#  }
#}
layer {
  bottom: "data"
  top: "Bnorm1"
  name: "Bnorm1"
  type: "BatchNorm"
  batch_norm_param {
  use_global_stats: false
  }
  param {
  lr_mult: 0
  }
  param {
  lr_mult: 0
  }
  param {
  lr_mult: 0
  }
}

layer {
  name: "conv1"
  type: "Convolution" 
  bottom: "Bnorm1"
  top: "conv1"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  convolution_param {
       weight_filler {
      type: "gaussian"
     # type: "xavier"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
    num_output: 96
    kernel_size: 7
    stride: 2
  }
}

layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0005
    beta: 0.75
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  convolution_param {
       weight_filler {
      type: "gaussian"
     # type: "xavier"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
    num_output: 256
    pad: 2
    kernel_size: 5
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
#layer {
#  name: "drop3"
#  type: "Dropout"
#  bottom: "conv2"
#  top: "conv2"
#  dropout_param {
#    dropout_ratio: 0.3
#  }
#}
layer {
  bottom: "conv2"
  top: "Bnorm2"
  name: "Bnorm2"
  type: "BatchNorm"
  batch_norm_param {
  use_global_stats: false
  }
  param {
  lr_mult: 0
  }
  param {
  lr_mult: 0
  }
  param {
  lr_mult: 0
  }
}

layer {
  name: "pool2"
  type: "Pooling"
  bottom: "Bnorm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 3
  }
}
layer {
  name: "conv3"
  type: "Convolution" 
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  convolution_param {
       weight_filler {
      type: "gaussian"
     # type: "xavier"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
#layer {
#  name: "drop4"
#  type: "Dropout"
#  bottom: "conv3"
#  top: "conv3"
#  dropout_param {
#    dropout_ratio: 0.2
#  }
#}
layer {
  bottom: "conv3"
  top: "Bnorm3"
  name: "Bnorm3"
  type: "BatchNorm"
  batch_norm_param {
  use_global_stats: false
  }
  param {
  lr_mult: 0
  }
  param {
  lr_mult: 0
  }
  param {
  lr_mult: 0
  }
}

layer {
  name: "conv4"
  type: "Convolution" 
  bottom: "Bnorm3"
  top: "conv4"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  convolution_param {
   weight_filler {
      type: "gaussian"
     # type: "xavier"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
#layer {
#  name: "drop5"
#  type: "Dropout"
#  bottom: "conv4"
#  top: "conv4"
#  dropout_param {
#    dropout_ratio: 0.2
#  }
#}
layer {
  bottom: "conv4"
  top: "Bnorm4"
  name: "Bnorm4"
  type: "BatchNorm"
  batch_norm_param {
  use_global_stats: false
  }
  param {
  lr_mult: 0
  }
  param {
  lr_mult: 0
  }
  param {
  lr_mult: 0
  }
}

layer {
  name: "conv5"
  type: "Convolution" 
  bottom: "Bnorm4"
  top: "conv5"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  convolution_param {
   weight_filler {
      type: "gaussian"
     # type: "xavier"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
#layer {
#  name: "drop6"
#  type: "Dropout"
#  bottom: "conv5"
#  top: "conv5"
#  dropout_param {
#    dropout_ratio: 0.2
#  }
#}
layer {
  bottom: "conv5"
  top: "Bnorm5"
  name: "Bnorm5"
  type: "BatchNorm"
  batch_norm_param {
  use_global_stats: false
  }
  param {
  lr_mult: 0
  }
  param {
  lr_mult: 0
  }
  param {
  lr_mult: 0
  }
}


#layer {
#  name: "pool5"
#  type: "Pooling"
#  bottom: "conv5"
#  top: "pool5"
#  pooling_param {
#    pool: MAX
#    kernel_size: 3
#    stride: 3
#  }
#}
#layer {
#  name: "fc6"
#  type: "InnerProduct"
#  bottom: "Bnorm5"
#  top: "fc6"
#  inner_product_param {
#    num_output: 4048
#  }
#}
#layer {
#  name: "relu6"
#  type: "ReLU"
#  bottom: "fc6"
#  top: "fc6"
#}
#layer {
#  name: "drop6"
#  type: "Dropout"
#  bottom: "fc6"
#  top: "fc6"
#  dropout_param {
#    dropout_ratio: 0.5
#  }
#}
#layer {
#  name: "fc7"
#  type: "InnerProduct"
#  bottom: "fc6"
#  top: "fc7"
#  inner_product_param {
#    num_output: 4048
#  }
#}
#layer {
#  name: "relu7"
#  type: "ReLU"
#  bottom: "fc7"
#  top: "fc7"
#}
#layer {
#  name: "drop7"
#  type: "Dropout"
#  bottom: "fc7"
#  top: "fc7"
#  dropout_param {
#    dropout_ratio: 0.5
#  }
#}
layer {
  name: "fc8"
  type: "InnerProduct"
  bottom: "Bnorm5"
  top: "fc8"
  inner_product_param {
    num_output: 7
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc8"
  bottom: "label"
  top: "loss"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc8"
  bottom: "label"
  top: "accuracy"
}

