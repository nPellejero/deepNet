#allLabsCrop Train: 128813
# test: 24260
#Clean: 123407
#test: 23300 
name: "VGG_ILSVRC_16_layer"
layer {
  name: "data"
  type: "HDF5Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  hdf5_data_param {
    #source: "/home/npellejero/tesis/AMFED/redes/txtFiles/cropClean127WTest/train/list.txt"
	  #source: "/home/npellejero/tesis/AMFED/redes/txtFiles/cohnKanadeManual/train/list.txt"
	  #source: "/home/npellejero/tesis/AMFED/redes/txtFiles/cohnKanade/train/list.txt"
	  #source: "/home/npellejero/tesis/AMFED/redes/txtFiles/fer2013/train/list.txt"
	 # source: "/home/npellejero/tesis/AMFED/redes/txtFiles/afewMan48/Train/list.txt"
	 source: "/home/npellejero/tesis/AMFED/redes/txtFiles/afewChallenge/Train/list.txt"
	#	source: "/home/npellejero/tesis/AMFED/redes/txtFiles/genkis4k/train/list.txt"
    batch_size: 128
  }
}
layer {
  name: "data"
  type: "HDF5Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  hdf5_data_param {
    #source: "/home/npellejero/tesis/AMFED/redes/txtFiles/cropClean127WTest/test/list.txt"
	 # source: "/home/npellejero/tesis/AMFED/redes/txtFiles/afewMan48/Val/list.txt"
	  source: "/home/npellejero/tesis/AMFED/redes/txtFiles/afewChallenge/Val/list.txt"
	 #source: "/home/npellejero/tesis/AMFED/redes/txtFiles/fer2013/val/list.txt"
	  #source: "/home/npellejero/tesis/AMFED/redes/txtFiles/cohnKanadeManual/val/list.txt"
		#source: "/home/npellejero/tesis/AMFED/redes/txtFiles/genkis4k/test/list.txt"
    batch_size: 50
  }
}
#layer {
#  name: "slicer_label"
#  type: "Slice"
#  bottom: "label"
#  top: "smile"
#  top: "rest"
#  slice_param {
#    axis: 1
#    slice_point: 1
#  }
#}
layer {
  bottom: "data"
  top: "Bnorm1"
  name: "Bnorm1"
  type: "BatchNorm"
  batch_norm_param {
  use_global_stats: false
  }
  param {
  lr_mult: 0
  }
  param {
  lr_mult: 0
  }
  param {
  lr_mult: 0
  }
}
layer {
  bottom: "Bnorm1"
  top: "conv1_1"
  name: "conv1_1"
  type: "Convolution"
	param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  convolution_param{
     weight_filler {
      type: "gaussian"
     # type: "xavier"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv1_1"
  top: "conv1_1"
  name: "relu1_1"
  type: "ReLU"
}

layer {
  bottom: "conv1_1"
  top: "conv1_2"
  name: "conv1_2"
  type: "Convolution"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
	convolution_param {
      weight_filler {
      type: "gaussian"
      #type: "xavier"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }   
		num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv1_2"
  top: "conv1_2"
  name: "relu1_2"
  type: "ReLU"
}

layer {
  bottom: "conv1_2"
  top: "pool1"
  name: "pool1"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    pad: 1
  }
}
layer {
  bottom: "pool1"
  top: "conv2_1"
  name: "conv2_1"
  type: "Convolution"
 	param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
	 convolution_param {
      weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
	  num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv2_1"
  top: "conv2_1"
  name: "relu2_1"
  type: "ReLU"
}

layer {
  bottom: "conv2_1"
  top: "conv2_2"
  name: "conv2_2"
  type: "Convolution"
	param {
   lr_mult: 1.0
   decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
 } 
  convolution_param {
        weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
   } 
		num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv2_2"
  top: "conv2_2"
  name: "relu2_2"
  type: "ReLU"
}
layer {
  bottom: "conv2_2"
  top: "pool2"
  name: "pool2"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride:2
  }
}
layer {
  bottom: "pool2"
  top: "conv3_1"
  name: "conv3_1"
  type: "Convolution"
	param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  convolution_param {
      weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
		num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_1"
  top: "conv3_1"
  name: "relu3_1"
  type: "ReLU"
}
layer {
  bottom: "conv3_1"
  top: "conv3_2"
  name: "conv3_2"
  type: "Convolution"
	param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }  convolution_param {
         weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
		num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_2"
  top: "conv3_2"
  name: "relu3_2"
  type: "ReLU"
}
layer {
  bottom: "conv3_2"
  top: "conv3_3"
  name: "conv3_3"
  type: "Convolution"
	param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  } 
	 convolution_param {
      weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
	   num_output: 256
 	   pad: 1
    kernel_size: 3
  }
}
layer {
		bottom: "conv3_3"
		top: "conv3_3"
		name: "relu3_3"
		type: "ReLU"
}
layer {
	bottom: "conv3_3"
	top: "pool3"
	name: "pool3"
	type: "Pooling"
	pooling_param {
		pool: MAX
		kernel_size: 3
    stride:2	
	}
}
layer {
	bottom: "pool3"
	top: "conv4_1"
	name: "conv4_1"
	type: "Convolution"
	param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
	convolution_param {
	    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
		num_output: 512
		pad: 1
		kernel_size: 3
	}
}
layer {
	bottom: "conv4_1"
	top: "conv4_1"
	name: "relu4_1"
	type: "ReLU"
}
layer {
	bottom: "conv4_1"
	top: "conv4_2"
	name: "conv4_2"
	type: "Convolution"
	param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }	convolution_param {
     weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
		num_output: 512
		pad: 1
		kernel_size: 3
	}
}
layer {
	bottom: "conv4_2"
	top: "conv4_2"
	name: "relu4_2"
	type: "ReLU"
}
layer {
	bottom: "conv4_2"
	top: "conv4_3"
	name: "conv4_3"
	type: "Convolution"
	param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
	convolution_param {
     weight_filler {
     type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
		num_output: 512
		pad: 1
		kernel_size: 3
	}
}
layer {
	bottom: "conv4_3"
	top: "conv4_3"
	name: "relu4_3"
	type: "ReLU"
}
layer {
	bottom: "conv4_3"
	top: "pool4"
	name: "pool4"
	type: "Pooling"
	pooling_param {
		pool: MAX
		kernel_size: 3
    pad: 1
	}
}
layer {
	bottom: "pool4"
	top: "conv5_1"
	name: "conv5_1"
	type: "Convolution"
	param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
	convolution_param {
     weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
		num_output: 512
  	pad: 1
		kernel_size: 3
	}
}
layer {
	bottom: "conv5_1"
 top: "conv5_1"
	name: "relu5_1"
  type: "ReLU"
}
layer {
	bottom: "conv5_1"
	top: "conv5_2"
	name: "conv5_2"
	type: "Convolution"
	param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }	
	convolution_param {
     weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
		num_output: 512
  	pad: 1
		kernel_size: 3
	}
}
layer {
	bottom: "conv5_2"
	top: "conv5_2"
	name: "relu5_2"
	type: "ReLU"
}
layer {
	bottom: "conv5_2"
	top: "conv5_3"
	name: "conv5_3"
	type: "Convolution"
	param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
	convolution_param {
     weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
		num_output: 512
		pad: 1
		kernel_size: 3
	}
}
layer {
	bottom: "conv5_3"
	top: "conv5_3"
	name: "relu5_3"
	type: "ReLU"
}
layer {
	bottom: "conv5_3"
	top: "pool5"
	name: "pool5"
	type: "Pooling"
	pooling_param {
		pool: MAX
		kernel_size: 3
		stride: 2
	}
}
#layer {
#  bottom: "pool5"
#  top: "fc6"
#  name: "fc6"
#  type: "InnerProduct"
#  inner_product_param {
#    num_output: 4096
#  }
#}
#layer {
#  bottom: "fc6"
#  top: "fc6"
#  name: "relu6"
#  type: "ReLU"
#}
#layer {
#  bottom: "fc6"
#  top: "fc6"
#  name: "drop6"
#  type: "Dropout"
#  dropout_param {
#    dropout_ratio: 0.5
#  }
#}
#layer {
#  bottom: "pool3"
#  top: "fc7"
#  name: "fc7"
#  type: "InnerProduct"
#	param {
#    lr_mult: 1.0
#    decay_mult: 1.0
#  }
#  param {
#    lr_mult: 2.0
#    decay_mult: 0.0
#  }
#  inner_product_param {
#    num_output: 4096
#  }
#}
#layer {
#  bottom: "fc7"
#  top: "fc7"
#  name: "relu7"
#  type: "ReLU"
#}
#layer {
#  bottom: "fc7"
#  top: "fc7"
#  name: "drop7"
#  type: "Dropout"
#  dropout_param {
#    dropout_ratio: 0.75
#  }
#}
layer {
  bottom: "pool5"
  top: "fc8_n"
  name: "fc8_n"
  type: "InnerProduct"
  inner_product_param {
    num_output: 7
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc8_n"
  bottom: "label"
  top: "loss"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc8_n"
  bottom: "label"
  top: "accuracy"
}

