name: "VGG16_siamese"

layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  data_param {
    source: "/home/npellejero/tesis/AMFED/redes/txtFiles/webface/train/data_a/"
    batch_size: 128
    backend:LMDB
  }
  include {
    phase: TRAIN
  }

}
layer {
  name: "data_p"
  type: "Data"
  top: "data_p"
  top: "label_p"
  data_param {
    backend:LMDB
    source: "/home/npellejero/tesis/AMFED/redes/txtFiles/webface/train/data_b/"
    batch_size: 128
  }
  include {
    phase: TRAIN
  }
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  data_param {
    source: "/home/npellejero/tesis/AMFED/redes/txtFiles/webface/test/data_a/"
    batch_size: 128
    backend:LMDB

  }
 include {
    phase: TEST
  }
}
layer {
  name: "data_p"
  type: "Data"
  top: "data_p"
  top: "label_p"
  data_param {
    backend:LMDB
    source: "/home/npellejero/tesis/AMFED/redes/txtFiles/webface/test/data_b/"
    batch_size: 128
  }
  include {
    phase: TEST
  }
}
layer {
  name: "a_b_to_same_not_same_label"
  type: "Python"
  bottom: "label"
  bottom: "label_p"
  top: "same_not_same"
  python_param {
    # the module name -- usually the filename -- that needs to be in $PYTHONPATH
    module: "siamese"
    # the layer name -- the class name in the module
    layer: "SiameseLabels"
  }
  propagate_down: false
  propagate_down: false
}
layer {
  bottom: "data"
  top: "Bnorm1"
  name: "Bnorm1"
  type: "BatchNorm"
  batch_norm_param {
  use_global_stats: false
  }
  param {
  lr_mult: 0
  }
  param {
  lr_mult: 0
  }
  param {
  lr_mult: 0
  }
}
layer {
  bottom: "Bnorm1"
  top: "conv1_1"
  name: "conv1_1"
  type: "Convolution"
	param {
    lr_mult: 1.0
    decay_mult: 1.0
		name: "conv1_1_w"
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
		name: "conv1_1_b"
  }
 convolution_param{
     weight_filler {
      type: "gaussian"
     # type: "xavier"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv1_1"
  top: "conv1_1"
  name: "relu1_1"
  type: "ReLU"
}

layer {
  bottom: "conv1_1"
  top: "conv1_2"
  name: "conv1_2"
  type: "Convolution"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
		name: "conv1_2_w"
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
		name: "conv1_2_b"
  }
	convolution_param {
      weight_filler {
      type: "gaussian"
      #type: "xavier"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }   
		num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv1_2"
  top: "conv1_2"
  name: "relu1_2"
  type: "ReLU"
}

layer {
  bottom: "conv1_2"
  top: "pool1"
  name: "pool1"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool1"
  top: "conv2_1"
  name: "conv2_1"
  type: "Convolution"
 	param {
    lr_mult: 1.0
    decay_mult: 1.0
		name: "conv2_1_w"
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
		name: "conv2_1_b"
  }
	convolution_param {
      weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
	  num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv2_1"
  top: "conv2_1"
  name: "relu2_1"
  type: "ReLU"
}

layer {
  bottom: "conv2_1"
  top: "conv2_2"
  name: "conv2_2"
  type: "Convolution"
	param {
   lr_mult: 1.0
   decay_mult: 1.0
		name: "conv_2_2_w"
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
		name: "conv2_2_b"
 } 
 convolution_param {
        weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
   } 
		num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv2_2"
  top: "conv2_2"
  name: "relu2_2"
  type: "ReLU"
}
layer {
  bottom: "conv2_2"
  top: "pool2"
  name: "pool2"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 3
  }
}
layer {
  bottom: "pool2"
  top: "conv3_1"
  name: "conv3_1"
  type: "Convolution"
	param {
    lr_mult: 1.0
    decay_mult: 1.0		
		name: "conv3_1_w"
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
		name: "conv3_1_b"
  }
 convolution_param {
      weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
		num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_1"
  top: "conv3_1"
  name: "relu3_1"
  type: "ReLU"
}
layer {
  bottom: "conv3_1"
  top: "conv3_2"
  name: "conv3_2"
  type: "Convolution"
	param {
    lr_mult: 1.0
    decay_mult: 1.0
		name: "conv3_2_w"
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
		name: "conv3_2_b"
  } 
	convolution_param {
         weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
		num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_2"
  top: "conv3_2"
  name: "relu3_2"
  type: "ReLU"
}
layer {
  bottom: "conv3_2"
  top: "conv3_3"
  name: "conv3_3"
  type: "Convolution"
	param {
    lr_mult: 1.0
    decay_mult: 1.0
		name: "conv3_3_w"
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
		name: "conv3_3_b"
  } 
	convolution_param {
      weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
	   num_output: 256
 	   pad: 1
    kernel_size: 3
  }
}
layer {
		bottom: "conv3_3"
		top: "conv3_3"
		name: "relu3_3"
		type: "ReLU"
}
layer {
	bottom: "conv3_3"
	top: "pool3"
	name: "pool3"
	type: "Pooling"
	pooling_param {
		pool: MAX
		kernel_size: 3
		stride: 3
	}
}
layer {
	bottom: "pool3"
	top: "conv4_1"
	name: "conv4_1"
	type: "Convolution"
	param {
    lr_mult: 1.0
    decay_mult: 1.0
		name: "conv4_1_w"
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
		name: "conv4_1_b"
  }
	convolution_param {
	    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
		num_output: 512
		pad: 1
		kernel_size: 3
	}
}
layer {
	bottom: "conv4_1"
	top: "conv4_1"
	name: "relu4_1"
	type: "ReLU"
}
layer {
	bottom: "conv4_1"
	top: "conv4_2"
	name: "conv4_2"
	type: "Convolution"
	param {
    lr_mult: 1.0
    decay_mult: 1.0
		name: "conv4_2_w"
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
		name: "conv4_2_b"
  }	
	convolution_param {
     weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
		num_output: 512
		pad: 1
		kernel_size: 3
	}
}
layer {
	bottom: "conv4_2"
	top: "conv4_2"
	name: "relu4_2"
	type: "ReLU"
}
layer {
	bottom: "conv4_2"
	top: "conv4_3"
	name: "conv4_3"
	type: "Convolution"
	param {
    lr_mult: 1.0
    decay_mult: 1.0
			name: "conv4_2_w"
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
		name:"conv4_2_b"
  }
	convolution_param {
     weight_filler {
     type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
		num_output: 512
		pad: 1
		kernel_size: 3
	}
}
layer {
	bottom: "conv4_3"
	top: "conv4_3"
	name: "relu4_3"
	type: "ReLU"
}
layer {
	bottom: "conv4_3"
	top: "pool4"
	name: "pool4"
	type: "Pooling"
	pooling_param {
		pool: MAX
		kernel_size: 2
		stride: 2
	}
}
layer {
	bottom: "pool4"
	top: "conv5_1"
	name: "conv5_1"
	type: "Convolution"
	param {
    lr_mult: 1.0
    decay_mult: 1.0
		name:"conv5_1_w"
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
		name:"conv5_1_b"
  }
	convolution_param {
     weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
		num_output: 512
  	pad: 1
		kernel_size: 3
	}
}
layer {
	bottom: "conv5_1"
 top: "conv5_1"
	name: "relu5_1"
  type: "ReLU"
}
layer {
	bottom: "conv5_1"
	top: "conv5_2"
	name: "conv5_2"
	type: "Convolution"
	param {
    lr_mult: 1.0
    decay_mult: 1.0
		name:"conv5_2_w"
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
		name:"conv5_2_b"
  }	
	convolution_param {
     weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
		num_output: 512
  	pad: 1
		kernel_size: 3
	}
}
layer {
	bottom: "conv5_2"
	top: "conv5_2"
	name: "relu5_2"
	type: "ReLU"
}
layer {
	bottom: "conv5_2"
	top: "conv5_3"
	name: "conv5_3"
	type: "Convolution"
	param {
    lr_mult: 1.0
    decay_mult: 1.0
		name:"conv5_3_w"
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
		name:"conv5_3_b"
  }
	convolution_param {
     weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
		num_output: 512
		pad: 1
		kernel_size: 3
	}
}
layer {
	bottom: "conv5_3"
	top: "conv5_3"
	name: "relu5_3"
	type: "ReLU"
}
#layer {
#	bottom: "conv5_3"
#	top: "pool5"
#	name: "pool5"
#	type: "Pooling"
#	pooling_param {
#		pool: MAX
#		kernel_size: 2
#		stride: 1
#	}
#}
layer {
  bottom: "conv5_3"
  top: "fc8_n"
  name: "fc8_n"
  param {
    name: "fc8_n_w"
    lr_mult: 1
  }
  param {
    name: "fc8_n_b"
    lr_mult: 2
  }
  type: "InnerProduct"
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "feat"
  type: "InnerProduct"
  bottom: "fc8_n"
  top: "feat"
  param {
    name: "feat_w"
    lr_mult: 1
  }
  param {
    name: "feat_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  bottom: "data_p"
  top: "Bnorm1_p"
  name: "Bnorm1_p"
  type: "BatchNorm"
  batch_norm_param {
  use_global_stats: false
  }
  param {
  lr_mult: 0
  }
  param {
  lr_mult: 0
  }
  param {
  lr_mult: 0
  }
}
layer {
  bottom: "Bnorm1_p"
  top: "conv1_1_p"
  name: "conv1_1_p"
  type: "Convolution"
	param {
    lr_mult: 1.0
    decay_mult: 1.0
		name:"conv1_1_w"
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
		name:"conv1_1_b"
  }
 convolution_param{
     weight_filler {
      type: "gaussian"
     # type: "xavier"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv1_1_p"
  top: "conv1_1_p"
  name: "relu1_1_p"
  type: "ReLU"
}

layer {
  bottom: "conv1_1_p"
  top: "conv1_2_p"
  name: "conv1_2_p"
  type: "Convolution"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
		name:"conv1_2_w"
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
		name:"conv1_2_b"
  }
	convolution_param {
      weight_filler {
      type: "gaussian"
      #type: "xavier"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }   
		num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv1_2_p"
  top: "conv1_2_p"
  name: "relu1_2_p"
  type: "ReLU"
}

layer {
  bottom: "conv1_2_p"
  top: "pool1_p"
  name: "pool1_p"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool1_p"
  top: "conv2_1_p"
  name: "conv2_1_p"
  type: "Convolution"
 	param {
    lr_mult: 1.0
    decay_mult: 1.0
		name:"conv2_1_w"
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
		name:"conv2_1_b"
  }
	convolution_param {
      weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
	  num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv2_1_p"
  top: "conv2_1_p"
  name: "relu2_1_p"
  type: "ReLU"
}

layer {
  bottom: "conv2_1_p"
  top: "conv2_2_p"
  name: "conv2_2_p"
  type: "Convolution"
	param {
   lr_mult: 1.0
   decay_mult: 1.0
		name:"conv_2_2_w"
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
		name:"conv2_2_b"
 } 
 convolution_param {
        weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
   } 
		num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv2_2_p"
  top: "conv2_2_p"
  name: "relu2_2_p"
  type: "ReLU"
}
layer {
  bottom: "conv2_2_p"
  top: "pool2_p"
  name: "pool2_p"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 3
  }
}
layer {
  bottom: "pool2_p"
  top: "conv3_1_p"
  name: "conv3_1_p"
  type: "Convolution"
	param {
    lr_mult: 1.0
    decay_mult: 1.0		
		name:"conv3_1_w" 
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
		name:"conv3_1_b"
  }
 convolution_param {
      weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
		num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_1_p"
  top: "conv3_1_p"
  name: "relu3_1_p"
  type: "ReLU"
}
layer {
  bottom: "conv3_1_p"
  top: "conv3_2_p"
  name: "conv3_2_p"
  type: "Convolution"
	param {
    lr_mult: 1.0
    decay_mult: 1.0
		name:"conv3_2_w"
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
		name:"conv3_2_b"	
  } 
	convolution_param {
         weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
		num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_2_p"
  top: "conv3_2_p"
  name: "relu3_2_p"
  type: "ReLU"
}
layer {
  bottom: "conv3_2_p"
  top: "conv3_3_p"
  name: "conv3_3_p"
  type: "Convolution"
	param {
    lr_mult: 1.0
    decay_mult: 1.0
		name:"conv3_3_w"
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
		name:"conv3_3_b"
  } 
	convolution_param {
      weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
	   num_output: 256
 	   pad: 1
    kernel_size: 3
  }
}
layer {
		bottom: "conv3_3_p"
		top: "conv3_3_p"
		name: "relu3_3_p"
		type: "ReLU"
}
layer {
	bottom: "conv3_3_p"
	top: "pool3_p"
	name: "pool3_p"
	type: "Pooling"
	pooling_param {
		pool: MAX
		kernel_size: 3
		stride: 3
	}
}
layer {
	bottom: "pool3_p"
	top: "conv4_1_p"
	name: "conv4_1_p"
	type: "Convolution"
	param {
    lr_mult: 1.0
    decay_mult: 1.0
		name:"conv4_1_w"
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
		name:"conv4_1_b"
  }
convolution_param {
	    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
		num_output: 512
		pad: 1
		kernel_size: 3
	}
}
layer {
	bottom: "conv4_1_p"
	top: "conv4_1_p"
	name: "relu4_1_p"
	type: "ReLU"
}
layer {
	bottom: "conv4_1_p"
	top: "conv4_2_p"
	name: "conv4_2_p"
	type: "Convolution"
	param {
    lr_mult: 1.0
    decay_mult: 1.0
		name:"conv4_2_w"
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
		name:"conv4_2_b"
  }	
	convolution_param {
     weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
		num_output: 512
		pad: 1
		kernel_size: 3
	}
}
layer {
	bottom: "conv4_2_p"
	top: "conv4_2_p"
	name: "relu4_2_p"
	type: "ReLU"
}
layer {
	bottom: "conv4_2_p"
	top: "conv4_3_p"
	name: "conv4_3_p"
	type: "Convolution"
	param {
    lr_mult: 1.0
    decay_mult: 1.0
			name:"conv4_2_w"
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
		name:"conv4_2_b"
  }
	convolution_param {
     weight_filler {
     type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
		num_output: 512
		pad: 1
		kernel_size: 3
	}
}
layer {
	bottom: "conv4_3_p"
	top: "conv4_3_p"
	name: "relu4_3_p"
	type: "ReLU"
}
layer {
	bottom: "conv4_3_p"
	top: "pool4_p"
	name: "pool4_p"
	type: "Pooling"
	pooling_param {
		pool: MAX
		kernel_size: 2
		stride: 2
	}
}
layer {
	bottom: "pool4_p"
	top: "conv5_1_p"
	name: "conv5_1_p"
	type: "Convolution"
	param {
    lr_mult: 1.0
    decay_mult: 1.0
		name:"conv5_1_w"
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
		name:"conv5_1_b"
  }
	convolution_param {
     weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
		num_output: 512
  	pad: 1
		kernel_size: 3
	}
}
layer {
	bottom: "conv5_1_p"
 top: "conv5_1_p"
	name: "relu5_1_p"
  type: "ReLU"
}
layer {
	bottom: "conv5_1_p"
	top: "conv5_2_p"
	name: "conv5_2_p"
	type: "Convolution"
	param {
    lr_mult: 1.0
    decay_mult: 1.0
		name:"conv5_2_w"
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
		name:"conv5_2_b"
  }	
	convolution_param {
     weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
		num_output: 512
  	pad: 1
		kernel_size: 3
	}
}
layer {
	bottom: "conv5_2_p"
	top: "conv5_2_p"
	name: "relu5_2_p"
	type: "ReLU"
}
layer {
	bottom: "conv5_2_p"
	top: "conv5_3_p"
	name: "conv5_3_p"
	type: "Convolution"
	param {
    lr_mult: 1.0
    decay_mult: 1.0
		name:"conv5_3_w"
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
		name:"conv5_3_b"
  }
	convolution_param {
     weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
		num_output: 512
		pad: 1
		kernel_size: 3
	}
}
layer {
	bottom: "conv5_3_p"
	top: "conv5_3_p"
	name: "relu5_3_p"
	type: "ReLU"
}
#layer {
#	bottom: "conv5_3_p"
#	top: "pool5_p"
#	name: "pool5_p"
#	type: "Pooling"
#	pooling_param {
#		pool: MAX
#		kernel_size: 2
#		stride: 1
#	}
#}
layer {
  bottom: "conv5_3_p"
  top: "fc8_n_p"
  name: "fc8_n_p"
  type: "InnerProduct"
  param {
    name: "fc8_n_w"
    lr_mult: 1
  }
  param {
    name: "fc8_n_b"
    lr_mult: 2
  }
    inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "feat_p"
  type: "InnerProduct"
  bottom: "fc8_n_p"
  top: "feat_p"
  param {
    name: "feat_w"
    lr_mult: 1
  }
  param {
    name: "feat_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss"
  type: "ContrastiveLoss"
  bottom: "feat"
  bottom: "feat_p"
  bottom: "same_not_same"
  top: "loss"
  contrastive_loss_param {
    margin: 1
  }
}
